services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: messenger-backend
    restart: unless-stopped
    volumes:
      - ./backend:/var/www/html
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=messenger
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - MAIL_MAILER=smtp
      - MAIL_HOST=mailhog
      - MAIL_PORT=1025
      - MAIL_FROM_ADDRESS=no-reply@messenger.test
    depends_on:
      - db
    networks:
      - messenger

  nginx:
    image: nginx:1.25
    container_name: messenger-nginx
    restart: unless-stopped
    ports:
      - "8000:80" # основной доступ
    volumes:
      - ./backend:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend   # важно!
    networks:
      - messenger

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: messenger-frontend
    restart: unless-stopped
    command: npm run dev -- --host  # чтобы vite слушал и внутри docker-сети
    ports:
      - "3000:5173" # прямой доступ к Vite
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - messenger

  db:
    image: mysql:8
    container_name: messenger-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: messenger
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - messenger

  mailhog:
    image: mailhog/mailhog
    container_name: messenger-mailhog
    restart: unless-stopped
    ports:
      - "8025:8025"
    networks:
      - messenger

volumes:
  db_data:

networks:
  messenger:
    driver: bridge
